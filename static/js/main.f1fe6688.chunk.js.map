{"version":3,"sources":["components/landingPage.js","components/projects.js","components/contact.js","components/aboutMe.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Landing","react_default","a","createElement","Component","Projects","Contact","About","Resume","Main","react_router","exact","path","component","App","className","lib","title","react_router_dom","style","textDecoration","color","to","scroll","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"6NAWeA,mLAPP,OACIC,EAAAC,EAAAC,cAAA,iCAHUC,aCSPC,mLAPP,OACIJ,EAAAC,EAAAC,cAAA,iCAHWC,aCSRE,mLAPP,OACIL,EAAAC,EAAAC,cAAA,iCAHUC,aCUPG,mLARP,OACIN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBADJ,sBAHQC,aCSLI,mLAPP,OACIP,EAAAC,EAAAC,cAAA,iCAHSC,aCsBNK,EAZF,kBACTR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,YAAYC,UAAWb,IAC1CC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWb,IACnCC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWN,IAChCN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWL,IACjCP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWR,IACnCJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWP,MC0B3BQ,mLA9BT,OACEb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACjBd,EAAAC,EAAAC,cAACa,EAAA,OAAD,KACIf,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQD,UAAU,eAAeE,MAAOhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAUC,GAAG,aAA1D,eAA0FC,QAAM,GACpItB,EAAAC,EAAAC,cAACa,EAAA,WAAD,KACIf,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,GAAG,WAAT,UACArB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,GAAG,UAAT,YACArB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,GAAG,aAAT,YACArB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,GAAG,YAAT,aAGRrB,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQC,MAAOhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAUC,GAAG,aAA1D,gBACXrB,EAAAC,EAAAC,cAACa,EAAA,WAAD,KACEf,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,GAAG,WAAT,UACArB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,GAAG,UAAT,YACArB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,GAAG,aAAT,YACArB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,GAAG,YAAT,aAGNrB,EAAAC,EAAAC,cAACa,EAAA,QAAD,KACIf,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACfd,EAAAC,EAAAC,cAACqB,EAAD,gBAvBIpB,aCDEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNNC,IAASC,OACL9B,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACIjB,EAAAC,EAAAC,cAAC6B,EAAD,OAEJC,SAASC,eAAe,SDiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,6FEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.f1fe6688.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Landing extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                Hello World\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Landing","import React, {Component} from 'react';\r\n\r\nclass Projects extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                Hello World\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Projects","import React, {Component} from 'react';\r\n\r\nclass Contact extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                Hello World\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Contact","import React, {Component} from 'react';\r\n\r\nclass About extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>About Page</h1>\r\n                Hello World\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default About","import React, {Component} from 'react';\r\n\r\nclass Resume extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                Hello World\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Resume","import React from 'react';\r\n\r\n/* Components */\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\n/* Pages */\r\nimport Landing from './landingPage';\r\nimport Projects from './projects';\r\nimport Contact from './contact';\r\nimport About from './aboutMe';\r\nimport Resume from './resume';\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path =\"/kotodama\" component={Landing} />\r\n        <Route path=\"/kotodama\" component={Landing}/>\r\n        <Route path=\"/about\" component={About}/>\r\n        <Route path=\"/resume\" component={Resume}/>\r\n        <Route path=\"/projects\" component={Projects}/>\r\n        <Route path=\"/contact\" component={Contact}/>\r\n        \r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\n\r\n/* Material Design for React */\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\n\r\n/* Importing COmponents */\r\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Main from './components/main'\r\n\r\nclass App extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"demo-big-content\">\r\n      <Layout>\r\n          <Header className=\"header-color\" title={<Link style={{textDecoration: 'none', color: 'white'}} to=\"/kotodama\">MyPortfolio</Link>} scroll>\r\n              <Navigation>\r\n                  <Link to=\"/resume\">Resume</Link>\r\n                  <Link to=\"/about\">About Me</Link>\r\n                  <Link to=\"/projects\">Projects</Link>\r\n                  <Link to=\"/contact\">Contact</Link>\r\n              </Navigation>\r\n          </Header>\r\n          <Drawer title={<Link style={{textDecoration: 'none', color: 'black'}} to=\"/kotodama\">MyPortfolio</Link>}>\r\n              <Navigation>\r\n                <Link to=\"/resume\">Resume</Link>\r\n                <Link to=\"/about\">About Me</Link>\r\n                <Link to=\"/projects\">Projects</Link>\r\n                <Link to=\"/contact\">Contact</Link>\r\n              </Navigation>\r\n          </Drawer>\r\n          <Content>\r\n              <div className=\"page-content\" />\r\n              <Main/>\r\n          </Content>\r\n      </Layout>\r\n  </div>\r\n  \r\n      );\r\n    }\r\n  }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n/* Material Design for React */\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}